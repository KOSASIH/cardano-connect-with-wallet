"use strict";(self.webpackChunk_cardano_foundation_cardano_connect_with_wallet_react=self.webpackChunk_cardano_foundation_cardano_connect_with_wallet_react||[]).push([[96],{"./src/components/ConnectWalletButton/ConnectWalletButton.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BalanceButton:function(){return BalanceButton},ButtonWithIcon:function(){return ButtonWithIcon},ComponentTitleButton:function(){return ComponentTitleButton},CustomButton:function(){return CustomButton},DefaultButton:function(){return DefaultButton},NoActionMenuButton:function(){return NoActionMenuButton},TestnetButton:function(){return TestnetButton},default:function(){return ConnectWalletButton_stories}});var react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const Menu=styled_components_browser_esm.ZP.div`
  display: none;
  position: absolute;
  margin-top: 8px;
  font-family: sans-serif;
  width: 100%;
  overflow: hidden;
  z-index: 10;
`,MenuItem=styled_components_browser_esm.ZP.span`
  color: ${props=>props.primaryColor};
  padding: 12px 16px;
  text-decoration: none;
  display: flex;
  align-items: center;
  cursor: pointer;
  border-color: ${props=>props.primaryColor};
  border-style: solid;
  border-width: 1px;
  border-bottom: none;
  background-color: white;

  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,
    color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

  &:hover {
    background-color: ${props=>props.primaryColorLight};
  }

  &:first-child {
    border-top-left-radius: ${props=>`${props.borderRadius}px;`}
    border-top-right-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom: none;
  }

  &:last-child {
    border-bottom-left-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom-right-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom: 1px solid ${props=>props.primaryColor};
  }
`,MenuItemIcon=styled_components_browser_esm.ZP.img`
  width: 24px;
  height: 24px;
  margin-right: 8px;
`,Button=styled_components_browser_esm.ZP.button`
  padding: 16px;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  border: 1px solid ${props=>props.primaryColor};
  color: ${props=>props.primaryColor};
  background-color: white;

  ${props=>props.borderRadius&&`border-radius: ${props.borderRadius}px;`}

  &:disabled {
    border: 1px solid #333;
    color: #333;
    backgroundcolor: #eee;
  }
`,Dropdown=styled_components_browser_esm.ZP.div`
  min-width: 180px;
  max-width: 240px;
  font-weight: bold;
  position: relative;
  display: inline-block;
  padding-bottom: 8px;
  padding-top: 8px;

  ${props=>props.customCSS}

  &:hover ${Menu} {
    display: block;
  }

  &:hover ${Button} {
    background-color: ${props=>props.primaryColor};
    color: white;
  }
`,DesktopMenuItem=styled_components_browser_esm.ZP.span`
  color: #333;
  position: relative;
  padding: 12px 16px;
  text-decoration: none;
  display: flex;
  align-items: center;
  border-color: #333;
  border-style: solid;
  border-width: 1px;
  border-bottom: none;
  background-color: #e3e3e3;
  overflow: hidden;

  &:first-child {
    border-top-left-radius: ${props=>`${props.borderRadius}px;`}
    border-top-right-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom: none;
  }

  &:last-child {
    border-bottom-left-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom-right-radius: ${props=>`${props.borderRadius}px;`}
    border-bottom: 1px solid #333;
  }

  & > span {
    text-transform: uppercase;
    font-size: 0.5rem;
    position: absolute;
    right: 0;
    width: 100%;
    padding: 3px;
    background: #777;
    color: #fff;
    text-align: center;
    transform: rotate(-35deg);
    translate: 25%;
  }

  & ${MenuItemIcon} {
    filter: brightness(0);
  }
`;try{Menu.displayName="Menu",Menu.__docgenInfo={description:"",displayName:"Menu",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#Menu"]={docgenInfo:Menu.__docgenInfo,name:"Menu",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#Menu"})}catch(__react_docgen_typescript_loader_error){}try{MenuItem.displayName="MenuItem",MenuItem.__docgenInfo={description:"",displayName:"MenuItem",props:{primaryColor:{defaultValue:null,description:"",name:"primaryColor",required:!0,type:{name:"string"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"number"}},gap:{defaultValue:null,description:"",name:"gap",required:!1,type:{name:"number"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},primaryColorLight:{defaultValue:null,description:"",name:"primaryColorLight",required:!0,type:{name:"string"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#MenuItem"]={docgenInfo:MenuItem.__docgenInfo,name:"MenuItem",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#MenuItem"})}catch(__react_docgen_typescript_loader_error){}try{MenuItemIcon.displayName="MenuItemIcon",MenuItemIcon.__docgenInfo={description:"",displayName:"MenuItemIcon",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLImageElement | null) => void) | RefObject<HTMLImageElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#MenuItemIcon"]={docgenInfo:MenuItemIcon.__docgenInfo,name:"MenuItemIcon",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#MenuItemIcon"})}catch(__react_docgen_typescript_loader_error){}try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{primaryColor:{defaultValue:null,description:"",name:"primaryColor",required:!0,type:{name:"string"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"number"}},customCSS:{defaultValue:null,description:"",name:"customCSS",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}try{Dropdown.displayName="Dropdown",Dropdown.__docgenInfo={description:"",displayName:"Dropdown",props:{primaryColor:{defaultValue:null,description:"",name:"primaryColor",required:!0,type:{name:"string"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"number"}},customCSS:{defaultValue:null,description:"",name:"customCSS",required:!1,type:{name:"string"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#Dropdown"]={docgenInfo:Dropdown.__docgenInfo,name:"Dropdown",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#Dropdown"})}catch(__react_docgen_typescript_loader_error){}try{DesktopMenuItem.displayName="DesktopMenuItem",DesktopMenuItem.__docgenInfo={description:"",displayName:"DesktopMenuItem",props:{borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"number"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/StyledButtonElements.tsx#DesktopMenuItem"]={docgenInfo:DesktopMenuItem.__docgenInfo,name:"DesktopMenuItem",path:"src/components/ConnectWalletButton/StyledButtonElements.tsx#DesktopMenuItem"})}catch(__react_docgen_typescript_loader_error){}var hooks=__webpack_require__("./src/hooks/index.ts"),color=__webpack_require__("../../node_modules/color/index.js"),color_default=__webpack_require__.n(color),utils=__webpack_require__("../utils/index.ts"),ModalDialog=__webpack_require__("./src/components/ModalDialog/ModalDialog.tsx"),core=__webpack_require__("../core/index.ts"),global=__webpack_require__("../global/index.ts");const ConnectWalletButton=_ref=>{var _dAppConnect$current;let{label:label,disabled:disabled,message:message,supportedWallets:supportedWallets=["Flint","Nami","Eternl","Yoroi","Typhon","NuFi","Lace"],showUnavailableWallets:showUnavailableWallets=global.UnavailableWalletVisibility.SHOW_UNAVAILABLE_ON_MOBILE,alwaysVisibleWallets:alwaysVisibleWallets=[],primaryColor:primaryColor,borderRadius:borderRadius=15,customCSS:customCSS,customActions:customActions=[],hideActionMenu:hideActionMenu=!1,afterComponent:afterComponent,beforeComponent:beforeComponent,limitNetwork:limitNetwork,peerConnectEnabled:peerConnectEnabled=!1,onConnect:onConnect,onDisconnect:onDisconnect,onSignMessage:onSignMessage,showAccountBalance:showAccountBalance=!1,onStakeAddressClick:onStakeAddressClick,onConnectError:onConnectError,dAppName:dAppName="Awesome DApp",dAppUrl:dAppUrl="http://awesome-dapp-url.tld/"}=_ref;const{isEnabled:isEnabled,stakeAddress:stakeAddress,signMessage:signMessage,connect:connect,disconnect:disconnect,isConnected:isConnected,installedExtensions:installedExtensions,enabledWallet:enabledWallet,accountBalance:accountBalance,dAppConnect:dAppConnect,initDappConnect:initDappConnect,meerkatAddress:meerkatAddress}=(0,hooks.U)({limitNetwork:limitNetwork}),[showModalDialog,setShowModalDialog]=(0,react.useState)(!1);(0,react.useEffect)((()=>{if(peerConnectEnabled&&null===dAppConnect.current){initDappConnect(dAppName,dAppUrl,((walletInfo,callback)=>{callback(window.confirm(`Do you want to connect to wallet ${walletInfo.address}?`),!0)}),((name,address)=>{connect(name)}),((name,address)=>{disconnect()}))}}),[]);const isMobile=(0,utils.SB)(),availableWallets=(0,utils.lV)(supportedWallets,showUnavailableWallets,alwaysVisibleWallets,installedExtensions),connectWallet=async walletName=>{connect(walletName,(()=>{"function"==typeof onConnect&&onConnect(walletName)}),(error=>{"function"==typeof onConnectError?onConnectError(walletName,error):error instanceof utils.w1?"nami"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.NAMI.name}/${core.LS.NAMI.id}`):"flint"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.FLINT.name}/${core.LS.FLINT.id}`):"typhon"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.TYPHON.name}/${core.LS.TYPHON.id}`):"yoroi"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.YOROI.name}/${core.LS.YOROI.id}`):"eternl"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.ETERNL.name}/${core.LS.ETERNL.id}`):"gerowallet"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.GEROWALLET.name}/${core.LS.GEROWALLET.id}`):"nufi"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.NUFI.name}/${core.LS.NUFI.id}`):"lace"===walletName.toLowerCase()?window.open(`${core.KE}${core.LS.LACE.name}/${core.LS.LACE.id}`):alert(`Please make sure you are using a modern browser and the ${walletName} browser extension has been installed.`):alert("Something went wrong. Please try again later.")}))},themeColorObject=primaryColor?color_default()(primaryColor):color_default()("#0538AF"),buttonTitle=stakeAddress&&isConnected?(()=>{if(showAccountBalance){return`₳ ${Math.round(100*accountBalance)/100}`}return`${stakeAddress.slice(0,12)}...`})():label||"Connect Wallet",walletMenu=react.createElement(Menu,{id:"connect-wallet-menu"},peerConnectEnabled&&react.createElement(MenuItem,{borderRadius:borderRadius,primaryColor:themeColorObject.hex(),primaryColorLight:themeColorObject.mix(color_default()("white"),.9).hex(),onClick:()=>setShowModalDialog(!0)},react.createElement(MenuItemIcon,{src:(0,utils.ow)("peer-connect")}),"Link Wallet"),availableWallets?availableWallets.map((availableWallet=>isMobile&&!core.rt.includes(availableWallet.toLowerCase())?react.createElement(DesktopMenuItem,{borderRadius:borderRadius,key:availableWallet},react.createElement(MenuItemIcon,{src:(0,utils.ow)(availableWallet)}),(0,core.kC)(availableWallet),react.createElement("span",null,"Desktop Only")):react.createElement(MenuItem,{borderRadius:borderRadius,primaryColor:themeColorObject.hex(),primaryColorLight:themeColorObject.mix(color_default()("white"),.9).hex(),key:availableWallet,onClick:()=>(async walletName=>{isMobile||connectWallet(walletName),core.rt.includes(walletName.toLowerCase())&&"flint"===walletName.toLowerCase()&&((0,utils.Ww)("flint")?connectWallet(walletName):window.location.href=`${core.Qr}${encodeURIComponent(window.location.href)}`)})(availableWallet)},react.createElement(MenuItemIcon,{src:(0,utils.ow)(availableWallet)}),(0,core.kC)(availableWallet)))):react.createElement("span",{id:"connect-wallet-hint"},`Please install a wallet browser extension (${(0,core.Rf)(supportedWallets)} are supported)`)),actionMenu=hideActionMenu?null:react.createElement(Menu,{id:"connect-wallet-menu"},"string"==typeof message&&react.createElement(MenuItem,{borderRadius:borderRadius,primaryColor:themeColorObject.hex(),primaryColorLight:themeColorObject.mix(color_default()("white"),.9).hex(),onClick:()=>signMessage(message,onSignMessage)},"Sign a message"),customActions.map(((customAction,index)=>react.createElement(MenuItem,{borderRadius:borderRadius,key:`custom-action-${index}`,primaryColor:themeColorObject.hex(),primaryColorLight:themeColorObject.mix(color_default()("white"),.9).hex(),onClick:customAction.onClick},customAction.label))),react.createElement(MenuItem,{borderRadius:borderRadius,primaryColor:themeColorObject.hex(),primaryColorLight:themeColorObject.mix(color_default()("white"),.9).hex(),onClick:()=>{disconnect(),"function"==typeof onDisconnect&&onDisconnect()}},"Disconnect"));if(void 0===beforeComponent&&enabledWallet){const walletIcon=(0,utils.ow)(enabledWallet);beforeComponent=react.createElement("img",{height:24,width:24,style:{marginRight:"8px"},src:walletIcon,alt:`${enabledWallet}-icon`})}return react.createElement(Dropdown,{id:"connect-wallet-dropdown",customCSS:customCSS,primaryColor:themeColorObject.hex()},peerConnectEnabled&&react.createElement(ModalDialog.Z,{handleClose:()=>setShowModalDialog(!1),content:meerkatAddress,icon:null===(_dAppConnect$current=dAppConnect.current)||void 0===_dAppConnect$current?void 0:_dAppConnect$current.getIdenticon(),visible:showModalDialog}),react.createElement(Button,{id:"connect-wallet-button",onClick:()=>{stakeAddress&&isConnected&&"function"==typeof onStakeAddressClick&&onStakeAddressClick(stakeAddress)},borderRadius:borderRadius,primaryColor:themeColorObject.hex()},beforeComponent,buttonTitle,afterComponent),!disabled&&(isEnabled&&isConnected?actionMenu:walletMenu))};var _DefaultButton$parame,_DefaultButton$parame2,_DefaultButton$parame3,_CustomButton$paramet,_CustomButton$paramet2,_CustomButton$paramet3,_NoActionMenuButton$p,_NoActionMenuButton$p2,_NoActionMenuButton$p3,_ButtonWithIcon$param,_ButtonWithIcon$param2,_ButtonWithIcon$param3,_ComponentTitleButton,_ComponentTitleButton2,_ComponentTitleButton3,_TestnetButton$parame,_TestnetButton$parame2,_TestnetButton$parame3,_BalanceButton$parame,_BalanceButton$parame2,_BalanceButton$parame3,ConnectWalletButton_ConnectWalletButton=ConnectWalletButton;try{ConnectWalletButton.displayName="ConnectWalletButton",ConnectWalletButton.__docgenInfo={description:"",displayName:"ConnectWalletButton",props:{label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string | Element"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},message:{defaultValue:null,description:"",name:"message",required:!1,type:{name:"string"}},supportedWallets:{defaultValue:{value:"[\n    'Flint',\n    'Nami',\n    'Eternl',\n    'Yoroi',\n    'Typhon',\n    'NuFi',\n    'Lace',\n  ]"},description:"",name:"supportedWallets",required:!1,type:{name:"string[]"}},showUnavailableWallets:{defaultValue:{value:"UnavailableWalletVisibility.SHOW_UNAVAILABLE_ON_MOBILE"},description:"",name:"showUnavailableWallets",required:!1,type:{name:"enum",value:[{value:"0"},{value:"1"},{value:"2"}]}},alwaysVisibleWallets:{defaultValue:{value:"[]"},description:"",name:"alwaysVisibleWallets",required:!1,type:{name:"string[]"}},primaryColor:{defaultValue:null,description:"",name:"primaryColor",required:!1,type:{name:"string"}},borderRadius:{defaultValue:{value:"15"},description:"",name:"borderRadius",required:!1,type:{name:"number"}},showAccountBalance:{defaultValue:{value:"false"},description:"",name:"showAccountBalance",required:!1,type:{name:"boolean"}},customCSS:{defaultValue:null,description:"",name:"customCSS",required:!1,type:{name:"string"}},customActions:{defaultValue:{value:"[]"},description:"",name:"customActions",required:!1,type:{name:"Action[]"}},beforeComponent:{defaultValue:null,description:"",name:"beforeComponent",required:!1,type:{name:"Element"}},afterComponent:{defaultValue:null,description:"",name:"afterComponent",required:!1,type:{name:"Element"}},hideActionMenu:{defaultValue:{value:"false"},description:"",name:"hideActionMenu",required:!1,type:{name:"boolean"}},limitNetwork:{defaultValue:null,description:"",name:"limitNetwork",required:!1,type:{name:"enum",value:[{value:'"mainnet"'},{value:'"testnet"'}]}},peerConnectEnabled:{defaultValue:{value:"false"},description:"",name:"peerConnectEnabled",required:!1,type:{name:"boolean"}},dAppUrl:{defaultValue:{value:"http://awesome-dapp-url.tld/"},description:"",name:"dAppUrl",required:!1,type:{name:"string"}},dAppName:{defaultValue:{value:"Awesome DApp"},description:"",name:"dAppName",required:!1,type:{name:"string"}},onConnect:{defaultValue:null,description:"",name:"onConnect",required:!1,type:{name:"((walletName: string) => void)"}},onDisconnect:{defaultValue:null,description:"",name:"onDisconnect",required:!1,type:{name:"(() => void)"}},onSignMessage:{defaultValue:null,description:"",name:"onSignMessage",required:!1,type:{name:"((signature: string, key: string) => void)"}},onStakeAddressClick:{defaultValue:null,description:"",name:"onStakeAddressClick",required:!1,type:{name:"((stakeAddress: string) => void)"}},onConnectError:{defaultValue:null,description:"",name:"onConnectError",required:!1,type:{name:"((walletName: string, error: Error) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ConnectWalletButton/ConnectWalletButton.tsx#ConnectWalletButton"]={docgenInfo:ConnectWalletButton.__docgenInfo,name:"ConnectWalletButton",path:"src/components/ConnectWalletButton/ConnectWalletButton.tsx#ConnectWalletButton"})}catch(__react_docgen_typescript_loader_error){}var ConnectWalletButton_stories={title:"Components/ConnectWalletButton",component:ConnectWalletButton_ConnectWalletButton};const Template=args=>react.createElement(ConnectWalletButton_ConnectWalletButton,args),DefaultButton=Template.bind({});DefaultButton.args={label:"Connect Wallet"};const CustomButton=Template.bind({});CustomButton.args={label:"Connect",message:"Augusta Ada King, Countess of Lovelace",onSignMessage:(signature,key)=>{console.log(signature),console.log(key),alert(signature)},supportedWallets:["Nami","Flint","Lace"],onStakeAddressClick:stakeAddress=>console.log(stakeAddress)};const NoActionMenuButton=Template.bind({});NoActionMenuButton.args={label:"Connect with wallet",hideActionMenu:!0,onStakeAddressClick:stakeAddress=>alert(stakeAddress)};const ButtonWithIcon=Template.bind({});ButtonWithIcon.args={beforeComponent:react.createElement("div",{style:{backgroundColor:"black",marginRight:6,width:16,height:16}}),afterComponent:react.createElement("div",{style:{backgroundColor:"red",marginLeft:6,width:16,height:16}})};const ComponentTitleButton=Template.bind({});ComponentTitleButton.args={label:react.createElement("div",{style:{backgroundColor:"red",padding:16,borderRadius:"100%"}}),onConnect:()=>alert("connected")};const TestnetButton=Template.bind({});TestnetButton.args={limitNetwork:core.td.TESTNET,message:"Augusta Ada King, Countess of Lovelace",onConnectError:(walletName,error)=>{alert(error.message)}};const BalanceButton=Template.bind({});BalanceButton.args={showAccountBalance:!0,message:"Augusta Ada King, Countess of Lovelace",onConnectError:(walletName,error)=>{alert(error.message)}},DefaultButton.parameters={...DefaultButton.parameters,docs:{...null===(_DefaultButton$parame=DefaultButton.parameters)||void 0===_DefaultButton$parame?void 0:_DefaultButton$parame.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_DefaultButton$parame2=DefaultButton.parameters)||void 0===_DefaultButton$parame2||null===(_DefaultButton$parame3=_DefaultButton$parame2.docs)||void 0===_DefaultButton$parame3?void 0:_DefaultButton$parame3.source}}},CustomButton.parameters={...CustomButton.parameters,docs:{...null===(_CustomButton$paramet=CustomButton.parameters)||void 0===_CustomButton$paramet?void 0:_CustomButton$paramet.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_CustomButton$paramet2=CustomButton.parameters)||void 0===_CustomButton$paramet2||null===(_CustomButton$paramet3=_CustomButton$paramet2.docs)||void 0===_CustomButton$paramet3?void 0:_CustomButton$paramet3.source}}},NoActionMenuButton.parameters={...NoActionMenuButton.parameters,docs:{...null===(_NoActionMenuButton$p=NoActionMenuButton.parameters)||void 0===_NoActionMenuButton$p?void 0:_NoActionMenuButton$p.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_NoActionMenuButton$p2=NoActionMenuButton.parameters)||void 0===_NoActionMenuButton$p2||null===(_NoActionMenuButton$p3=_NoActionMenuButton$p2.docs)||void 0===_NoActionMenuButton$p3?void 0:_NoActionMenuButton$p3.source}}},ButtonWithIcon.parameters={...ButtonWithIcon.parameters,docs:{...null===(_ButtonWithIcon$param=ButtonWithIcon.parameters)||void 0===_ButtonWithIcon$param?void 0:_ButtonWithIcon$param.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_ButtonWithIcon$param2=ButtonWithIcon.parameters)||void 0===_ButtonWithIcon$param2||null===(_ButtonWithIcon$param3=_ButtonWithIcon$param2.docs)||void 0===_ButtonWithIcon$param3?void 0:_ButtonWithIcon$param3.source}}},ComponentTitleButton.parameters={...ComponentTitleButton.parameters,docs:{...null===(_ComponentTitleButton=ComponentTitleButton.parameters)||void 0===_ComponentTitleButton?void 0:_ComponentTitleButton.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_ComponentTitleButton2=ComponentTitleButton.parameters)||void 0===_ComponentTitleButton2||null===(_ComponentTitleButton3=_ComponentTitleButton2.docs)||void 0===_ComponentTitleButton3?void 0:_ComponentTitleButton3.source}}},TestnetButton.parameters={...TestnetButton.parameters,docs:{...null===(_TestnetButton$parame=TestnetButton.parameters)||void 0===_TestnetButton$parame?void 0:_TestnetButton$parame.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_TestnetButton$parame2=TestnetButton.parameters)||void 0===_TestnetButton$parame2||null===(_TestnetButton$parame3=_TestnetButton$parame2.docs)||void 0===_TestnetButton$parame3?void 0:_TestnetButton$parame3.source}}},BalanceButton.parameters={...BalanceButton.parameters,docs:{...null===(_BalanceButton$parame=BalanceButton.parameters)||void 0===_BalanceButton$parame?void 0:_BalanceButton$parame.docs,source:{originalSource:"args => <ConnectWalletButton {...args} />",...null===(_BalanceButton$parame2=BalanceButton.parameters)||void 0===_BalanceButton$parame2||null===(_BalanceButton$parame3=_BalanceButton$parame2.docs)||void 0===_BalanceButton$parame3?void 0:_BalanceButton$parame3.source}}}},"./src/components/ModalDialog/ModalDialog.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Z:function(){return ModalDialog_ModalDialog}});var react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const Modal=styled_components_browser_esm.ZP.div`
  position: fixed;
  z-index: 100;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgb(0, 0, 0);
  background-color: rgba(0, 0, 0, 0.4);
`,ModalContent=styled_components_browser_esm.ZP.div`
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #aeaeae;
  border-radius: 9px;
  width: fit-content;
  display: flex;
  flex-direction: column;
  align-items: center;
`;try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ModalDialog/StyledDialogElements.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"src/components/ModalDialog/StyledDialogElements.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}try{ModalContent.displayName="ModalContent",ModalContent.__docgenInfo={description:"",displayName:"ModalContent",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ModalDialog/StyledDialogElements.tsx#ModalContent"]={docgenInfo:ModalContent.__docgenInfo,name:"ModalContent",path:"src/components/ModalDialog/StyledDialogElements.tsx#ModalContent"})}catch(__react_docgen_typescript_loader_error){}var dist=__webpack_require__("../../node_modules/react-qrcode-logo/dist/index.js");const ModalDialog=props=>{const{visible:visible,content:content,handleClose:handleClose,icon:icon}=props;return react.createElement(Modal,{onClick:()=>{"function"==typeof handleClose&&handleClose()},style:{display:visible?"block":"none"}},react.createElement(ModalContent,{"data-testid":"modal-content"},react.createElement(dist.QRCode,{removeQrCodeBehindLogo:!0,logoImage:icon||void 0,ecLevel:"H",eyeRadius:5,qrStyle:"dots",value:content}),react.createElement("p",{style:{maxWidth:300}},"You can use a CIP45 compliant mobile wallet on your smartphone (e.g. Eternl) to connect an external peer to peer wallet")))};var ModalDialog_ModalDialog=ModalDialog;try{ModalDialog.displayName="ModalDialog",ModalDialog.__docgenInfo={description:"",displayName:"ModalDialog",props:{visible:{defaultValue:null,description:"",name:"visible",required:!0,type:{name:"boolean"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"string"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"string | null | undefined"}},handleClose:{defaultValue:null,description:"",name:"handleClose",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/ModalDialog/ModalDialog.tsx#ModalDialog"]={docgenInfo:ModalDialog.__docgenInfo,name:"ModalDialog",path:"src/components/ModalDialog/ModalDialog.tsx#ModalDialog"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=components-ConnectWalletButton-ConnectWalletButton-stories.647323bd.iframe.bundle.js.map