{"version":3,"file":"index.js","mappings":"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","sources":["webpack://CardanoConnectWithWalletCore/webpack/universalModuleDefinition","webpack://CardanoConnectWithWalletCore/./node_modules/base64-js/index.js","webpack://CardanoConnectWithWalletCore/./node_modules/bech32/dist/index.js","webpack://CardanoConnectWithWalletCore/./node_modules/buffer/index.js","webpack://CardanoConnectWithWalletCore/./node_modules/ieee754/index.js","webpack://CardanoConnectWithWalletCore/webpack/bootstrap","webpack://CardanoConnectWithWalletCore/webpack/runtime/define property getters","webpack://CardanoConnectWithWalletCore/webpack/runtime/hasOwnProperty shorthand","webpack://CardanoConnectWithWalletCore/webpack/runtime/make namespace object","webpack://CardanoConnectWithWalletCore/./common.ts","webpack://CardanoConnectWithWalletCore/./decode.ts","webpack://CardanoConnectWithWalletCore/./helper.ts","webpack://CardanoConnectWithWalletCore/./error.ts","webpack://CardanoConnectWithWalletCore/./types.ts","webpack://CardanoConnectWithWalletCore/./wallet.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CardanoConnectWithWalletCore\"] = factory();\n\telse\n\t\troot[\"CardanoConnectWithWalletCore\"] = factory();\n})(this, function() {\nreturn ","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export enum NetworkId {\n  MAINNET = 1,\n  TESTNET = 0,\n}\n","import { bech32 } from 'bech32';\nimport { NetworkId } from './common';\nimport { Buffer } from 'buffer';\n\nexport const decodeHexAddress = (hexAddress: string) => {\n  hexAddress = hexAddress.toLowerCase();\n  const addressType = hexAddress.charAt(0);\n  const networkId = Number(hexAddress.charAt(1)) as NetworkId;\n  const addressBytes = Buffer.from(hexAddress, 'hex');\n  const words = bech32.toWords(addressBytes);\n  let prefix;\n\n  if (['e', 'f'].includes(addressType)) {\n    if (networkId === NetworkId.MAINNET) {\n      prefix = 'stake';\n    } else if (networkId === NetworkId.TESTNET) {\n      prefix = 'stake_test';\n    } else {\n      throw new TypeError('Unsupported network type');\n    }\n\n    return bech32.encode(prefix, words, 1000);\n  } else {\n    if (networkId === NetworkId.MAINNET) {\n      prefix = 'addr';\n    } else if (networkId === NetworkId.TESTNET) {\n      prefix = 'addr_test';\n    } else {\n      throw new TypeError('Unsupported network type');\n    }\n\n    return bech32.encode(prefix, words, 1000);\n  }\n};\n","export const capitalize = (word: string) =>\n  word.charAt(0).toUpperCase() + word.slice(1);\n\nexport const formatSupportedWallets = (supportedWallets: Array<String>) => {\n  if (supportedWallets.length > 1) {\n    return `${supportedWallets.slice(0, -1).join(', ')} or ${\n      supportedWallets.slice(-1)[0]\n    }`;\n  } else {\n    return supportedWallets[0];\n  }\n};\n","import { capitalize } from './helper';\nimport { NetworkType } from './types';\n\nexport class WrongNetworkTypeError extends Error {\n  constructor(targetNetwork: NetworkType, currentNetwork: NetworkType) {\n    const message = `You have tried to call functions on ${capitalize(\n      currentNetwork\n    )}, while the network type is limited to ${capitalize(targetNetwork)}.`;\n\n    super(message);\n    this.name = 'WrongNetworkTypeError';\n  }\n}\n","export enum NetworkType {\n  MAINNET = 'mainnet',\n  TESTNET = 'testnet',\n}\n\nexport type Cip30Function =\n  | 'getNetworkId'\n  | 'getUtxos'\n  | 'getCollateral'\n  | 'getBalance'\n  | 'getUsedAddresses'\n  | 'getUnusedAddresses'\n  | 'getChangeAddress'\n  | 'getRewardAddresses'\n  | 'signTx'\n  | 'signData'\n  | 'submitTx';\n","import { decodeHexAddress } from './decode';\nimport { WrongNetworkTypeError } from './error';\nimport { Cip30Function, NetworkType } from './types';\n\nconst unwrapApi = async (\n  walletName: string\n): Promise<{ [key in Cip30Function]: Function }> => {\n  const cardano = (window as any).cardano;\n\n  return await cardano[\n    walletName === 'typhon' ? 'typhoncip30' : walletName\n  ].enable();\n};\n\nexport const getRewardAddresses = async (walletName: string) => {\n  const api = await unwrapApi(walletName);\n  if (typeof api.getRewardAddresses === 'function') {\n    const hexAddresses = await api.getRewardAddresses();\n\n    if (hexAddresses && hexAddresses.length > 0) {\n      return hexAddresses.map((hexAddress: string) =>\n        decodeHexAddress(hexAddress)\n      );\n    } else {\n      return [];\n    }\n  }\n};\n\nexport const signMessage = async (\n  walletName: string,\n  message: string,\n  onSignMessage?: (signature: string, key: string | undefined) => void,\n  onSignError?: (error: Error) => void,\n  limitNetwork?: NetworkType\n) => {\n  const cardano = (window as any).cardano;\n  if (typeof message === 'undefined') {\n    return;\n  }\n\n  const api = await unwrapApi(walletName);\n  const hexAddresses = await getRewardAddresses(walletName);\n\n  if (hexAddresses.length > 0) {\n    let networkType = NetworkType.MAINNET;\n    if (hexAddresses[0] && hexAddresses[0].startsWith('stake_test')) {\n      networkType = NetworkType.TESTNET;\n    }\n\n    if (limitNetwork && limitNetwork !== networkType) {\n      const error = new WrongNetworkTypeError(networkType, limitNetwork);\n      if (typeof onSignError === 'function') {\n        onSignError(error);\n      } else {\n        console.warn(error);\n      }\n      return;\n    }\n\n    if (hexAddresses.length > 0) {\n      const hexAddress = hexAddresses[0];\n      let hexMessage = '';\n\n      for (var i = 0, l = message.length; i < l; i++) {\n        hexMessage += message.charCodeAt(i).toString(16);\n      }\n\n      try {\n        const dataSignature = await api.signData(hexAddress, hexMessage);\n\n        if (typeof onSignMessage === 'function') {\n          const { signature, key } = dataSignature;\n          onSignMessage(signature, key);\n        }\n      } catch (error) {\n        if (typeof onSignError === 'function') {\n          onSignError(error as Error);\n        } else {\n          console.warn(error);\n        }\n      }\n    }\n  }\n};\n\nexport const getInstalledWalletExtensions: (\n  supportedWallets?: Array<String>\n) => Array<string> = (supportedWallets) => {\n  const cardano = (window as any).cardano;\n\n  if (typeof cardano === 'undefined') {\n    return [];\n  }\n\n  if (supportedWallets) {\n    return Object.keys(cardano)\n      .map((walletExtension) => walletExtension.toLowerCase())\n      .filter((walletExtension) =>\n        supportedWallets\n          .map((walletName) => walletName.toLowerCase())\n          .includes(walletExtension)\n      );\n  } else {\n    return Object.keys(cardano)\n      .filter(\n        (walletExtension) =>\n          typeof cardano[walletExtension].enable === 'function'\n      )\n      .map((walletExtension) => walletExtension.toLowerCase());\n  }\n};\n"],"names":["root","factory","exports","module","define","amd","this","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","ALPHABET","ALPHABET_MAP","z","x","charAt","polymodStep","pre","b","prefixChk","prefix","chk","c","v","convert","data","inBits","outBits","pad","value","bits","maxV","result","toWords","bytes","fromWordsUnsafe","words","res","isArray","fromWords","getLibraryFromEncoding","encoding","ENCODING_CONST","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","undefined","decodeUnsafe","decode","encode","TypeError","base64","ieee754","customInspectSymbol","Symbol","Buffer","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","allocUnsafe","from","string","isEncoding","actual","write","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","checked","numberIsNaN","type","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","Math","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","o","prop","hasOwnProperty","r","toStringTag","NetworkId","decodeHexAddress","hexAddress","addressType","networkId","addressBytes","bech32","MAINNET","TESTNET","capitalize","word","formatSupportedWallets","supportedWallets","WrongNetworkTypeError","targetNetwork","currentNetwork","NetworkType","unwrapApi","async","cardano","window","walletName","enable","getRewardAddresses","api","hexAddresses","map","signMessage","onSignMessage","onSignError","limitNetwork","networkType","startsWith","warn","hexMessage","l","dataSignature","signData","signature","getInstalledWalletExtensions","keys","walletExtension","filter"],"sourceRoot":""}